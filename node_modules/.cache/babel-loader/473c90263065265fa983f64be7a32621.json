{"ast":null,"code":"var _jsxFileName = \"/Users/tihana/Documents/ag04/weather-app/weather-app/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport Card from '../UI/Card';\nimport styles from \"./Login.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const [error, setError] = useState();\n\n  const loginHandler = event => {\n    event.preventDefault();\n    console.log(\" ovo je ref \" + emailRef.current.value);\n    console.log(\" ovo je ref \" + passwordRef.current.value);\n\n    if (emailRef.current.value.trim().length === 0 || passwordRef.current.value.trim().length === 0) {\n      setError({\n        title: \"Invalid email or password\",\n        message: \"Try again - non empty\"\n      });\n      console.log(\"Error 1\");\n      return;\n    }\n\n    if (!emailRef.current.value.trim().includes('@')) {\n      setError({\n        title: \"Invalid email\",\n        message: \"Try again - email must contain @\"\n      });\n      console.log(\"Error 2\");\n      return;\n    }\n\n    if (passwordRef.current.value.trim().length < 8) {\n      setError({\n        title: \"Invalid password\",\n        message: \"Try again - password must contain at least 8 characters\"\n      });\n      console.log(\"Error 3\");\n      return;\n    }\n\n    if (passwordRef.current.value.search(/[A-Z]/) === -1) {\n      setError({\n        title: \"Invalid password\",\n        message: \"Try again - password must contain at least one uppercase letter\"\n      });\n      console.log(\"Error missing upper case letter\");\n      return;\n    }\n\n    const enteredUser = {\n      email: emailRef.current.value,\n      password: passwordRef.current.value\n    };\n    console.log(\"u Login.js \" + enteredUser.email);\n    props.onLogin(enteredUser);\n    emailRef.current.value = '';\n    passwordRef.current.value = '';\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: styles.input,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: loginHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"email\",\n          type: \"text\",\n          ref: emailRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"password\",\n          type: \"text\",\n          ref: passwordRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: styles.button,\n          children: \"Add User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"VIxeqWQJtm4MS5gKKWe2kebU45M=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/tihana/Documents/ag04/weather-app/weather-app/src/components/Login/Login.js"],"names":["React","useState","useRef","Card","styles","Login","props","emailRef","passwordRef","error","setError","loginHandler","event","preventDefault","console","log","current","value","trim","length","title","message","includes","search","enteredUser","email","password","onLogin","input","button"],"mappings":"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","sourcesContent":["import React , {useState , useRef} from 'react';\nimport Card from '../UI/Card';\nimport styles from \"./Login.module.css\";\n\nconst Login = (props) => {\n\n    const emailRef = useRef();\n    const passwordRef = useRef();\n\n    const [error, setError] = useState();\n\n    const loginHandler = (event) => {\n        event.preventDefault();\n        console.log(\" ovo je ref \"+emailRef.current.value);\n        console.log(\" ovo je ref \"+passwordRef.current.value);\n\n        if(emailRef.current.value.trim().length === 0|| passwordRef.current.value.trim().length === 0){\n            setError({\n                title : \"Invalid email or password\",\n                message : \"Try again - non empty\"\n            })\n            console.log(\"Error 1\");\n            return;\n        }\n\n        if(!emailRef.current.value.trim().includes('@')){\n            setError({\n                title : \"Invalid email\",\n                message : \"Try again - email must contain @\"\n            })\n            console.log(\"Error 2\");\n            return;\n        }\n\n        if(passwordRef.current.value.trim().length < 8){\n            setError({\n                title : \"Invalid password\",\n                message : \"Try again - password must contain at least 8 characters\"\n            })\n            console.log(\"Error 3\");\n            return;\n        }\n\n        if (passwordRef.current.value.search(/[A-Z]/) === -1){\n            setError({\n                title : \"Invalid password\",\n                message : \"Try again - password must contain at least one uppercase letter\"\n            })\n            console.log(\"Error missing upper case letter\");\n            return;\n        }\n\n        const enteredUser = {\n            email : emailRef.current.value,\n            password : passwordRef.current.value\n        };\n\n        console.log(\"u Login.js \"+enteredUser.email);\n\n        props.onLogin(enteredUser);\n        emailRef.current.value = '';\n        passwordRef.current.value = '';\n\n    }\n\n    return (\n        <div>\n            <Card className={styles.input}>\n                <form onSubmit={loginHandler}>\n                    <label htmlFor=\"email\">Email</label>\n                    <input id=\"email\" type=\"text\" ref={emailRef} ></input>\n                    <label htmlFor=\"password\" >Password</label>\n                    <input id=\"password\" type=\"text\" ref={passwordRef}></input>\n                    <button type=\"submit\" className={styles.button}>Add User</button>\n                </form>\n            </Card>\n        </div>\n        \n    );\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}