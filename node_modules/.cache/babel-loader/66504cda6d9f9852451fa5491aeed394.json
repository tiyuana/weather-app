{"ast":null,"code":"var _jsxFileName = \"/Users/tihana/Documents/ag04/weather-app/weather-app/src/components/pages/Forecast/Forecast.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Conditions from '../Conditions/Conditions';\nimport styles from './Forecast.module.css';\nimport ForecastList from './ForecastList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Forecast = () => {\n  _s();\n\n  const [unit, setUnit] = useState(\"metric\");\n  const [enteredCity, setEnteredCity] = useState(\"\");\n  let [responseObj, setResponseObj] = useState({});\n  let [error, setError] = useState(false);\n  let [loading, setLoading] = useState(false); //nacin1\n\n  /*const getForecast =  async () => {\n      try{\n          const res = await axios.get(\n              \"https://api.openweathermap.org/data/2.5/weather?q=Zagreb&appid=5a4e05662564bdefbc9d1b3d65c255f0\"\n          )\n          console.log(res.data);\n       } catch(err){\n          console.error(err);\n      }\n  };*/\n  //nacin2\n\n  /*const getForecast = async () => {\n      console.log(\"halo\");\n      const res = await axios.get(\n          \"https://api.openweathermap.org/data/2.5/weather?q=Zagreb&appid=5a4e05662564bdefbc9d1b3d65c255f0\"\n      )\n      console.log(res.data.main.temp);\n      console.log(res.data.main.temp_max);\n      console.log(res.data.main.temp_min);\n  }*/\n  //nacin3\n\n  const getForecast = e => {\n    e.preventDefault();\n    console.log(\"daj prognozu!\");\n\n    if (enteredCity.trim().length === 0) {\n      console.log(\"ERROR MODAL ILI SAMO ZACRVENI\");\n      return setError(true);\n    } //clear states for new data\n\n\n    setError(false);\n    setLoading(true);\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${enteredCity}&units=${unit}&appid=5a4e05662564bdefbc9d1b3d65c255f0`).then(response => response.json()).then(response => {\n      if (response.cod !== 200) {\n        setResponseObj(response);\n        throw new Error();\n      }\n\n      setResponseObj(response);\n      setLoading(false);\n    }).catch(error => {\n      setError(true);\n      setLoading(false);\n      console.log(error.message);\n      console.log(\"uhvatio sam error!\");\n    });\n  };\n\n  const addCityHandler = enteredCity => {\n    console.log(\"in Forecast.js\");\n    console.log(enteredCity);\n    /*setUser((prevUsers) => {\n      return [enteredUser, ...prevUsers];\n    });*/\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Find Current Weather Conditions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: getForecast,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter City\",\n        maxLength: \"50\",\n        value: enteredCity,\n        onChange: e => setEnteredCity(e.target.value),\n        className: styles.TextInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: styles.Radio,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"units\",\n          checked: unit === \"imperial\",\n          value: \"imperial\",\n          onChange: e => setUnit(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), \"Fahrenheit\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: styles.Radio,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"units\",\n          checked: unit === \"metric\",\n          value: \"metric\",\n          onChange: e => setUnit(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), \"Celsius\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.Button,\n        type: \"submit\",\n        children: \"Get Forecast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(ForecastList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Forecast, \"TcU+k69FykxEYvFPlhWWAcAHYbk=\");\n\n_c = Forecast;\nexport default Forecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"Forecast\");","map":{"version":3,"sources":["/Users/tihana/Documents/ag04/weather-app/weather-app/src/components/pages/Forecast/Forecast.js"],"names":["React","useState","Conditions","styles","ForecastList","Forecast","unit","setUnit","enteredCity","setEnteredCity","responseObj","setResponseObj","error","setError","loading","setLoading","getForecast","e","preventDefault","console","log","trim","length","fetch","then","response","json","cod","Error","catch","message","addCityHandler","target","value","TextInput","Radio","Button"],"mappings":"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","sourcesContent":["import React , {useState} from 'react';\nimport Conditions from '../Conditions/Conditions';\nimport styles from './Forecast.module.css';\nimport ForecastList from './ForecastList';\n\n\nconst Forecast = () => {\n\n    const [unit,setUnit] = useState(\"metric\");\n    const [enteredCity, setEnteredCity] = useState(\"\");\n    let [responseObj, setResponseObj] = useState({});\n\n    let [error, setError] = useState(false);\n    let [loading, setLoading] = useState(false);\n\n    //nacin1\n    /*const getForecast =  async () => {\n        try{\n            const res = await axios.get(\n                \"https://api.openweathermap.org/data/2.5/weather?q=Zagreb&appid=5a4e05662564bdefbc9d1b3d65c255f0\"\n            )\n            console.log(res.data);\n\n        } catch(err){\n            console.error(err);\n        }\n    };*/\n\n    //nacin2\n    /*const getForecast = async () => {\n        console.log(\"halo\");\n        const res = await axios.get(\n            \"https://api.openweathermap.org/data/2.5/weather?q=Zagreb&appid=5a4e05662564bdefbc9d1b3d65c255f0\"\n        )\n        console.log(res.data.main.temp);\n        console.log(res.data.main.temp_max);\n        console.log(res.data.main.temp_min);\n    }*/\n\n    //nacin3\n    const getForecast = (e) => {\n        e.preventDefault();\n        console.log(\"daj prognozu!\");\n\n        if(enteredCity.trim().length === 0){\n            console.log(\"ERROR MODAL ILI SAMO ZACRVENI\");\n            return setError(true);\n        }\n        //clear states for new data\n        setError(false);\n        setLoading(true);\n\n        fetch(`https://api.openweathermap.org/data/2.5/weather?q=${enteredCity}&units=${unit}&appid=5a4e05662564bdefbc9d1b3d65c255f0`)\n        .then(response => response.json())\n        .then(response => {\n            if(response.cod !== 200){\n                setResponseObj(response)\n                throw new Error()\n            }\n            setResponseObj(response)\n            setLoading(false);\n       })\n       .catch(error => {\n           setError(true);\n           setLoading(false);\n\n           console.log(error.message);\n           console.log(\"uhvatio sam error!\");\n       })\n    }\n\n    const addCityHandler = (enteredCity) => {\n        console.log(\"in Forecast.js\");\n        console.log(enteredCity);\n        /*setUser((prevUsers) => {\n          return [enteredUser, ...prevUsers];\n        });*/\n    \n      }\n    \n    return(\n        <div>\n           <h2>Find Current Weather Conditions</h2>\n           <form onSubmit={getForecast}>\n                <input\n                    type=\"text\"\n                    placeholder=\"Enter City\"\n                    maxLength=\"50\"\n                    value={enteredCity}\n                    onChange={(e) => setEnteredCity(e.target.value)}\n                    className={styles.TextInput}\n                    />\n\n                <label className={styles.Radio}>\n                    <input\n                        type=\"radio\"\n                        name=\"units\"\n                        checked={unit === \"imperial\"}\n                        value=\"imperial\"\n                        onChange={(e) => setUnit(e.target.value)}\n                        />\n                    Fahrenheit\n                </label>\n                <label className={styles.Radio}>\n                    <input\n                        type=\"radio\"\n                        name=\"units\"\n                        checked={unit === \"metric\"}\n                        value=\"metric\"\n                        onChange={(e) => setUnit(e.target.value)}\n                        />\n                    Celsius\n                </label>\n                <button className={styles.Button} type=\"submit\">Get Forecast</button>\n            </form>\n            <ForecastList />\n        </div>\n    );\n\n}\n\nexport default Forecast;"]},"metadata":{},"sourceType":"module"}