{"ast":null,"code":"var _jsxFileName = \"/Users/tihana/Documents/ag04/weather-app/weather-app/src/components/pages/Forecast/FiveDayForecast.js\",\n    _s = $RefreshSig$();\n\nimport react, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport WeekContainer from \"../WeeklyForecast/WeekContainer\";\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FiveDayForecast = () => {\n  _s();\n\n  const [dailyWeatherList, setDailyWeatherList] = useState([]);\n  const params = useParams();\n  const location = useLocation(); //const { cord } = location.state;\n\n  console.log(\"in fiveDayForecast,js\");\n  console.log(location.state[cord]);\n\n  const getMonth = m => {\n    if (m === \"01\") return \"Jan\";else if (m === \"02\") return \"Feb\";else if (m === \"03\") return \"Mar\";else if (m === \"04\") return \"Apr\";else if (m === \"05\") return \"May\";else if (m === \"06\") return \"Jun\";else if (m === \"07\") return \"Jul\";else if (m === \"08\") return \"Aug\";else if (m === \"09\") return \"Sep\";else if (m === \"10\") return \"Oct\";else if (m === \"11\") return \"Nov\";else if (m === \"12\") return \"Dec\";\n    return \"njemaaa\";\n  }; //mogla sam ovdje koristiti one call api jer ima daily za 7 dana-PROMIJENI KASNIJE!!\n\n  /*  const fetchData = ( async () => {\n          const response = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${params.cityId}&units=metric&appid=5a4e05662564bdefbc9d1b3d65c255f0`);\n          const data = await response.json();\n          console.log(data);\n  */\n\n  /*const dailyData = data.list.filter(reading => {   \n      return reading.dt_txt.includes(\"18:00:00\")\n      }\n    )\n  console.log(\"ovo je filtrirano\");\n  console.log(dailyData);*/\n\n  /*       for (let i = 0; i <40; i=i+8) {\n              let data_time = data.list[i].dt_txt.split(\" \")[0].split(\"-\");\n              let month = getMonth(data_time[1]);\n             var date = new Date(data_time[2]+month+data_time[0]);\n             var day = date.getDay();\n             var daysName = ['Sun','Mon','Tue','Wed','Thu','Fri','Sat'];\n             \n           \n             const dailyWeather = {\n                 dayName : daysName[day],\n                 //icon : \"data.list[i].weather[0].id\",\n                 icon : <img src={`http://openweathermap.org/img/w/${data.list[i].weather[0].icon}.png`}/>,\n                 minTemp : data.list[i].main.temp_min,\n                 maxTemp : data.list[i].main.temp_max,\n              }\n              setDailyWeatherList((prevDailyWeathers) => {\n                 const updated = [...prevDailyWeathers,dailyWeather];\n                 return updated;\n             });\n         }\n      });*/\n\n\n  const fetchData = async () => {\n    const response1 = await fetch(`http://api.openweathermap.org/geo/1.0/direct?q=${params.cityId}&limit=5&appid=5a4e05662564bdefbc9d1b3d65c255f0`);\n    const data1 = await response1.json();\n    console.log(\"in fiveDayForecast.js ovo su geokoordinate\");\n    console.log(data1);\n    /*const response = await fetch(`https://api.openweathermap.org/data/2.5/onecall?q=${params.cityId}&units=metric&exclude=current,minutely,hourly,alerts&appid=5a4e05662564bdefbc9d1b3d65c255f0`);\n    const data = await response.json();\n    console.log(data);\n       for (let i = 0; i <40; i=i+8) {\n         let data_time = data.list[i].dt_txt.split(\" \")[0].split(\"-\");\n         let month = getMonth(data_time[1]);\n        var date = new Date(data_time[2]+month+data_time[0]);\n        var day = date.getDay();\n        var daysName = ['Sun','Mon','Tue','Wed','Thu','Fri','Sat'];\n        \n      \n        const dailyWeather = {\n            dayName : daysName[day],\n            //icon : \"data.list[i].weather[0].id\",\n            icon : <img src={`http://openweathermap.org/img/w/${data.list[i].weather[0].icon}.png`}/>,\n            minTemp : data.list[i].main.temp_min,\n            maxTemp : data.list[i].main.temp_max,\n         }\n         setDailyWeatherList((prevDailyWeathers) => {\n            const updated = [...prevDailyWeathers,dailyWeather];\n            return updated;\n        });\n    }*/\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(WeekContainer, {\n      fiveDays: dailyWeatherList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FiveDayForecast, \"7ZWsWlyABx7DmPgCwa2C+iEcXV4=\", false, function () {\n  return [useParams, useLocation];\n});\n\n_c = FiveDayForecast;\nexport default FiveDayForecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"FiveDayForecast\");","map":{"version":3,"sources":["/Users/tihana/Documents/ag04/weather-app/weather-app/src/components/pages/Forecast/FiveDayForecast.js"],"names":["react","useEffect","useState","useParams","WeekContainer","useLocation","FiveDayForecast","dailyWeatherList","setDailyWeatherList","params","location","console","log","state","cord","getMonth","m","fetchData","response1","fetch","cityId","data1","json"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA4BC,QAA5B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;AAGA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAE1B,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CN,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAMO,MAAM,GAAGN,SAAS,EAAxB;AAEA,QAAMO,QAAQ,GAAGL,WAAW,EAA5B,CAL0B,CAM1B;;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,KAAT,CAAeC,IAAf,CAAZ;;AAGA,QAAMC,QAAQ,GAAIC,CAAD,IAAO;AACpB,QAAIA,CAAC,KAAG,IAAR,EAAc,OAAO,KAAP,CAAd,KACK,IAAIA,CAAC,KAAG,IAAR,EAAc,OAAO,KAAP,CAAd,KACA,IAAIA,CAAC,KAAG,IAAR,EAAc,OAAO,KAAP,CAAd,KACA,IAAIA,CAAC,KAAG,IAAR,EAAc,OAAO,KAAP,CAAd,KACA,IAAIA,CAAC,KAAG,IAAR,EAAc,OAAO,KAAP,CAAd,KACA,IAAIA,CAAC,KAAG,IAAR,EAAc,OAAO,KAAP,CAAd,KACA,IAAIA,CAAC,KAAG,IAAR,EAAc,OAAO,KAAP,CAAd,KACA,IAAIA,CAAC,KAAG,IAAR,EAAc,OAAO,KAAP,CAAd,KACA,IAAIA,CAAC,KAAG,IAAR,EAAc,OAAO,KAAP,CAAd,KACA,IAAIA,CAAC,KAAG,IAAR,EAAc,OAAO,KAAP,CAAd,KACA,IAAIA,CAAC,KAAG,IAAR,EAAc,OAAO,KAAP,CAAd,KACA,IAAIA,CAAC,KAAG,IAAR,EAAc,OAAO,KAAP;AACnB,WAAO,SAAP;AACH,GAdD,CAX0B,CA2B1B;;AACJ;AACA;AACA;AACA;AACA;;AAEQ;AACR;AACA;AACA;AACA;AACA;;AAGC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAOI,QAAMC,SAAS,GAAK,YAAY;AAI5B,UAAMC,SAAS,GAAG,MAAMC,KAAK,CAAE,kDAAiDV,MAAM,CAACW,MAAO,iDAAjE,CAA7B;AACA,UAAMC,KAAK,GAAG,MAAMH,SAAS,CAACI,IAAV,EAApB;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAY,4CAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYS,KAAZ;AAGA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AASK,GAzCD;;AA2CApB,EAAAA,SAAS,CAAC,MAAM;AACZgB,IAAAA,SAAS;AACZ,GAFQ,EAEN,EAFM,CAAT;AAKA,sBACI;AAAA,2BACI,QAAC,aAAD;AAAe,MAAA,QAAQ,EAAEV;AAAzB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA1HD;;GAAMD,e;UAGaH,S,EAEEE,W;;;KALfC,e;AA4HN,eAAeA,eAAf","sourcesContent":["import react , {useEffect , useState} from \"react\";\nimport { useParams } from \"react-router\";\nimport WeekContainer from \"../WeeklyForecast/WeekContainer\";\nimport { useLocation } from 'react-router-dom'\n\n\nconst FiveDayForecast = () => {\n\n    const [dailyWeatherList, setDailyWeatherList] = useState([]);\n    const params = useParams();\n\n    const location = useLocation();\n    //const { cord } = location.state;\n    console.log(\"in fiveDayForecast,js\");\n    console.log(location.state[cord]);\n\n\n    const getMonth = (m) => {\n        if (m===\"01\") return \"Jan\"\n        else if (m===\"02\") return \"Feb\"\n        else if (m===\"03\") return \"Mar\"\n        else if (m===\"04\") return \"Apr\"\n        else if (m===\"05\") return \"May\"\n        else if (m===\"06\") return \"Jun\"\n        else if (m===\"07\") return \"Jul\"\n        else if (m===\"08\") return \"Aug\"\n        else if (m===\"09\") return \"Sep\"\n        else if (m===\"10\") return \"Oct\"\n        else if (m===\"11\") return \"Nov\"\n        else if (m===\"12\") return \"Dec\"\n        return \"njemaaa\";\n    }\n\n    //mogla sam ovdje koristiti one call api jer ima daily za 7 dana-PROMIJENI KASNIJE!!\n/*  const fetchData = ( async () => {\n        const response = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${params.cityId}&units=metric&appid=5a4e05662564bdefbc9d1b3d65c255f0`);\n        const data = await response.json();\n        console.log(data);\n*/\n\n        /*const dailyData = data.list.filter(reading => {   \n            return reading.dt_txt.includes(\"18:00:00\")\n            }\n          )\n        console.log(\"ovo je filtrirano\");\n        console.log(dailyData);*/\n\n\n /*       for (let i = 0; i <40; i=i+8) {\n\n            let data_time = data.list[i].dt_txt.split(\" \")[0].split(\"-\");\n\n            let month = getMonth(data_time[1]);\n            var date = new Date(data_time[2]+month+data_time[0]);\n            var day = date.getDay();\n            var daysName = ['Sun','Mon','Tue','Wed','Thu','Fri','Sat'];\n            \n          \n            const dailyWeather = {\n                dayName : daysName[day],\n                //icon : \"data.list[i].weather[0].id\",\n                icon : <img src={`http://openweathermap.org/img/w/${data.list[i].weather[0].icon}.png`}/>,\n                minTemp : data.list[i].main.temp_min,\n                maxTemp : data.list[i].main.temp_max,\n\n            }\n\n            setDailyWeatherList((prevDailyWeathers) => {\n                const updated = [...prevDailyWeathers,dailyWeather];\n                return updated;\n            });\n        }\n\n    });*/\n\n    const fetchData = ( async () => {\n\n        \n\n        const response1 = await fetch(`http://api.openweathermap.org/geo/1.0/direct?q=${params.cityId}&limit=5&appid=5a4e05662564bdefbc9d1b3d65c255f0`);\n        const data1 = await response1.json();\n        console.log(\"in fiveDayForecast.js ovo su geokoordinate\");\n        console.log(data1);\n        \n        \n        /*const response = await fetch(`https://api.openweathermap.org/data/2.5/onecall?q=${params.cityId}&units=metric&exclude=current,minutely,hourly,alerts&appid=5a4e05662564bdefbc9d1b3d65c255f0`);\n        const data = await response.json();\n        console.log(data);\n\n\n\n        for (let i = 0; i <40; i=i+8) {\n\n            let data_time = data.list[i].dt_txt.split(\" \")[0].split(\"-\");\n\n            let month = getMonth(data_time[1]);\n            var date = new Date(data_time[2]+month+data_time[0]);\n            var day = date.getDay();\n            var daysName = ['Sun','Mon','Tue','Wed','Thu','Fri','Sat'];\n            \n          \n            const dailyWeather = {\n                dayName : daysName[day],\n                //icon : \"data.list[i].weather[0].id\",\n                icon : <img src={`http://openweathermap.org/img/w/${data.list[i].weather[0].icon}.png`}/>,\n                minTemp : data.list[i].main.temp_min,\n                maxTemp : data.list[i].main.temp_max,\n\n            }\n\n            setDailyWeatherList((prevDailyWeathers) => {\n                const updated = [...prevDailyWeathers,dailyWeather];\n                return updated;\n            });\n        }*/\n\n    });\n\n    useEffect(() => {\n        fetchData();\n    }, []);    \n\n\n    return(\n        <div>\n            <WeekContainer fiveDays={dailyWeatherList} />\n        </div>\n    );\n}\n\nexport default FiveDayForecast;"]},"metadata":{},"sourceType":"module"}