{"ast":null,"code":"var _jsxFileName = \"/Users/tihana/Documents/ag04/weather-app/weather-app/src/components/Forecast/Forecast.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Conditions from '../Conditions/Conditions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Forecast = () => {\n  _s();\n\n  const [enteredCity, setEnteredCity] = useState(\"Beograd\");\n  let [responseObj, setResponseObj] = useState({}); //nacin1\n\n  /*const getForecast =  async () => {\n      try{\n          const res = await axios.get(\n              \"https://api.openweathermap.org/data/2.5/weather?q=Zagreb&appid=5a4e05662564bdefbc9d1b3d65c255f0\"\n          )\n          console.log(res.data);\n       } catch(err){\n          console.error(err);\n      }\n  };*/\n  //nacin2\n\n  /*const getForecast = async () => {\n      console.log(\"halo\");\n      const res = await axios.get(\n          \"https://api.openweathermap.org/data/2.5/weather?q=Zagreb&appid=5a4e05662564bdefbc9d1b3d65c255f0\"\n      )\n      console.log(res.data.main.temp);\n      console.log(res.data.main.temp_max);\n      console.log(res.data.main.temp_min);\n  }*/\n  //nacin3\n\n  const getForecast = () => {\n    console.log(\"halo\");\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${enteredCity}&appid=5a4e05662564bdefbc9d1b3d65c255f0`).then(response => response.json()).then(response => {\n      setResponseObj(response);\n    });\n  };\n\n  const enteredCityHandler = event => {\n    console.log(event.target.value);\n    setEnteredCity(encodeURIComponent(event.target.value));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Find Current Weather Conditions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: enteredCityHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getForecast,\n      children: \"Get Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(Conditions, {\n      responseObj: responseObj\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Forecast, \"oYYsHLC37z99SdgGAyeVRJiBUQ8=\");\n\n_c = Forecast;\nexport default Forecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"Forecast\");","map":{"version":3,"sources":["/Users/tihana/Documents/ag04/weather-app/weather-app/src/components/Forecast/Forecast.js"],"names":["React","useState","Conditions","Forecast","enteredCity","setEnteredCity","responseObj","setResponseObj","getForecast","console","log","fetch","then","response","json","enteredCityHandler","event","target","value","encodeURIComponent"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAEnB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,SAAD,CAA9C;AACA,MAAI,CAACK,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA5C,CAHmB,CAInB;;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGI;;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEI;;AACA,QAAMO,WAAW,GAAG,MAAM;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAC,IAAAA,KAAK,CAAE,qDAAoDP,WAAY,yCAAlE,CAAL,CACEQ,IADF,CACOC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADnB,EACoCF,IADpC,CACyCC,QAAQ,IAAI;AAClDN,MAAAA,cAAc,CAACM,QAAD,CAAd;AACH,KAHA;AAIH,GAND;;AAOA,QAAME,kBAAkB,GAAIC,KAAD,IAAW;AAClCP,IAAAA,OAAO,CAACC,GAAR,CAAYM,KAAK,CAACC,MAAN,CAAaC,KAAzB;AACAb,IAAAA,cAAc,CAACc,kBAAkB,CAACH,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAnB,CAAd;AACH,GAHD;;AAKA,sBACI;AAAA,4BACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,eAEG;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAEH;AAA7B;AAAA;AAAA;AAAA;AAAA,YAFH,eAGG;AAAQ,MAAA,OAAO,EAAEP,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHH,eAIG,QAAC,UAAD;AAAY,MAAA,WAAW,EAAEF;AAAzB;AAAA;AAAA;AAAA;AAAA,YAJH;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAlDD;;GAAMH,Q;;KAAAA,Q;AAoDN,eAAeA,QAAf","sourcesContent":["import React , {useState} from 'react';\nimport Conditions from '../Conditions/Conditions';\n\n\nconst Forecast = () => {\n\n    const [enteredCity, setEnteredCity] = useState(\"Beograd\");\n    let [responseObj, setResponseObj] = useState({});\n    //nacin1\n    /*const getForecast =  async () => {\n        try{\n            const res = await axios.get(\n                \"https://api.openweathermap.org/data/2.5/weather?q=Zagreb&appid=5a4e05662564bdefbc9d1b3d65c255f0\"\n            )\n            console.log(res.data);\n\n        } catch(err){\n            console.error(err);\n        }\n    };*/\n\n    //nacin2\n    /*const getForecast = async () => {\n        console.log(\"halo\");\n        const res = await axios.get(\n            \"https://api.openweathermap.org/data/2.5/weather?q=Zagreb&appid=5a4e05662564bdefbc9d1b3d65c255f0\"\n        )\n        console.log(res.data.main.temp);\n        console.log(res.data.main.temp_max);\n        console.log(res.data.main.temp_min);\n    }*/\n\n    //nacin3\n    const getForecast = () => {\n        console.log(\"halo\");\n        fetch(`https://api.openweathermap.org/data/2.5/weather?q=${enteredCity}&appid=5a4e05662564bdefbc9d1b3d65c255f0`\n        ).then(response => response.json()).then(response => {\n           setResponseObj(response)\n       })\n    }\n    const enteredCityHandler = (event) => {\n        console.log(event.target.value);\n        setEnteredCity(encodeURIComponent(event.target.value));\n    };\n    \n    return(\n        <div>\n           <h2>Find Current Weather Conditions</h2>\n           <input type=\"text\" onChange={enteredCityHandler}></input>\n           <button onClick={getForecast}>Get Forecast</button>\n           <Conditions responseObj={responseObj}/>\n       </div>\n    );\n\n}\n\nexport default Forecast;"]},"metadata":{},"sourceType":"module"}