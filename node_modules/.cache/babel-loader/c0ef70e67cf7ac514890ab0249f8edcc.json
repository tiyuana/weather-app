{"ast":null,"code":"var _jsxFileName = \"/Users/tihana/Documents/ag04/weather-app/weather-app/src/components/pages/Forecast/FiveDayForecast.js\",\n    _s = $RefreshSig$();\n\nimport react, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport TableForecast from \"../WeeklyForecast/TableForecast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FiveDayForecast = () => {\n  _s();\n\n  //const [data,setData] = useState();\n  const [dailyWeatherList, setDailyWeatherList] = useState([]);\n  const params = useParams();\n\n  const getMonth = m => {\n    if (m === \"01\") return \"Jan\";else if (m === \"02\") return \"Feb\";else if (m === \"03\") return \"Mar\";else if (m === \"04\") return \"Apr\";else if (m === \"05\") return \"May\";else if (m === \"06\") return \"Jun\";else if (m === \"07\") return \"Jul\";else if (m === \"08\") return \"Aug\";else if (m === \"09\") return \"Sep\";else if (m === \"10\") return \"Oct\";else if (m === \"11\") return \"Nov\";else if (m === \"12\") return \"Dec\";\n    return \"njemaaa\";\n  };\n\n  const fetchData = async () => {\n    const response = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${params.cityId}&units=metric&appid=5a4e05662564bdefbc9d1b3d65c255f0`);\n    const data = await response.json();\n    console.log(data); //setData(data);\n    //-------------------------------------------------------------------\n    //sada izvadi podatke za 5 dana i stavi u listu\n\n    /*console.log(\"datum je \");\n    let d = data.list[0].dt_txt.split(\" \")[0].split(\"-\");\n    console.log(d);\n     let month = getMonth(d[1]);\n    console.log(month)\n    var date = new Date(d[2]+month+d[0]);\n    var day = date.getDay();\n    var daysName = ['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'];\n    console.log(daysName[day]);\n      console.log(\"max temp je\");\n    console.log(data.list[0].main.temp_max);\n    console.log(\"min temp je \");\n    console.log(data.list[0].main.temp_min);\n    */\n\n    for (let i = 0; i < 40; i = i + 8) {\n      let data_time = data.list[i].dt_txt.split(\" \")[0].split(\"-\"); //console.log(data_time);\n\n      let month = getMonth(data_time[1]); //console.log(month)\n\n      var date = new Date(data_time[2] + month + data_time[0]);\n      var day = date.getDay();\n      var daysName = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']; //console.log(daysName[day]);\n      //console.log(\"max temp je\");\n      //console.log(data.list[i].main.temp_max);\n      //console.log(\"min temp je \");\n      //console.log(data.list[i].main.temp_min);\n\n      const dailyWeather = {\n        dayName: daysName[day],\n        icon: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `http://openweathermap.org/img/w/${data.list[i].weather[0].icon}.png`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 24\n        }, this),\n        minTemp: data.list[i].main.temp_min,\n        maxTemp: data.list[i].main.temp_max\n      };\n      setDailyWeatherList(prevDailyWeathers => {\n        const updated = [...prevDailyWeathers, dailyWeather];\n        return updated;\n      });\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Nema nista\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 19\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Ovo je petodnevna prognoza\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableForecast, {\n      fiveDays: dailyWeatherList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FiveDayForecast, \"ZbpEhN7YW6a5gyPqCVHfn7odICc=\", false, function () {\n  return [useParams];\n});\n\n_c = FiveDayForecast;\nexport default FiveDayForecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"FiveDayForecast\");","map":{"version":3,"sources":["/Users/tihana/Documents/ag04/weather-app/weather-app/src/components/pages/Forecast/FiveDayForecast.js"],"names":["react","useEffect","useState","useParams","TableForecast","FiveDayForecast","dailyWeatherList","setDailyWeatherList","params","getMonth","m","fetchData","response","fetch","cityId","data","json","console","log","i","data_time","list","dt_txt","split","month","date","Date","day","getDay","daysName","dailyWeather","dayName","icon","weather","minTemp","main","temp_min","maxTemp","temp_max","prevDailyWeathers","updated","content"],"mappings":"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","sourcesContent":["import react , {useEffect , useState} from \"react\";\nimport { useParams } from \"react-router\";\nimport TableForecast from \"../WeeklyForecast/TableForecast\";\n\nconst FiveDayForecast = () => {\n\n    //const [data,setData] = useState();\n    const [dailyWeatherList, setDailyWeatherList] = useState([]);\n    const params = useParams();\n\n    const getMonth = (m) => {\n        if (m===\"01\") return \"Jan\"\n        else if (m===\"02\") return \"Feb\"\n        else if (m===\"03\") return \"Mar\"\n        else if (m===\"04\") return \"Apr\"\n        else if (m===\"05\") return \"May\"\n        else if (m===\"06\") return \"Jun\"\n        else if (m===\"07\") return \"Jul\"\n        else if (m===\"08\") return \"Aug\"\n        else if (m===\"09\") return \"Sep\"\n        else if (m===\"10\") return \"Oct\"\n        else if (m===\"11\") return \"Nov\"\n        else if (m===\"12\") return \"Dec\"\n        return \"njemaaa\";\n    }\n\n    const fetchData = ( async () => {\n        const response = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${params.cityId}&units=metric&appid=5a4e05662564bdefbc9d1b3d65c255f0`);\n        const data = await response.json();\n        console.log(data); \n\n        //setData(data);\n        //-------------------------------------------------------------------\n\n        //sada izvadi podatke za 5 dana i stavi u listu\n\n        /*console.log(\"datum je \");\n        let d = data.list[0].dt_txt.split(\" \")[0].split(\"-\");\n        console.log(d);\n\n        let month = getMonth(d[1]);\n        console.log(month)\n        var date = new Date(d[2]+month+d[0]);\n        var day = date.getDay();\n        var daysName = ['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'];\n        console.log(daysName[day]);\n\n\n        console.log(\"max temp je\");\n        console.log(data.list[0].main.temp_max);\n        console.log(\"min temp je \");\n        console.log(data.list[0].main.temp_min);\n*/\n\n        for (let i = 0; i <40; i=i+8) {\n\n            let data_time = data.list[i].dt_txt.split(\" \")[0].split(\"-\");\n            //console.log(data_time);\n\n            let month = getMonth(data_time[1]);\n            //console.log(month)\n            var date = new Date(data_time[2]+month+data_time[0]);\n            var day = date.getDay();\n            var daysName = ['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'];\n            //console.log(daysName[day]);\n\n            //console.log(\"max temp je\");\n            //console.log(data.list[i].main.temp_max);\n            //console.log(\"min temp je \");\n            //console.log(data.list[i].main.temp_min);\n          \n            const dailyWeather = {\n                dayName : daysName[day],\n                icon : <img src={`http://openweathermap.org/img/w/${data.list[i].weather[0].icon}.png`}/>,\n                minTemp : data.list[i].main.temp_min,\n                maxTemp : data.list[i].main.temp_max,\n\n            }\n\n            setDailyWeatherList((prevDailyWeathers) => {\n                const updated = [...prevDailyWeathers,dailyWeather];\n                return updated;\n            });\n        }\n\n    });\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    let content = <p>Nema nista</p>;\n\n    \n\n    return(\n        <div>\n            <div>Ovo je petodnevna prognoza</div>\n            <section>{content}</section>\n            <TableForecast fiveDays={dailyWeatherList} />\n        </div>\n    );\n}\n\nexport default FiveDayForecast;"]},"metadata":{},"sourceType":"module"}