{"ast":null,"code":"var _jsxFileName = \"/Users/tihana/Documents/ag04/weather-app/weather-app/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useContext } from 'react';\nimport Card from '../UI/Card';\nimport styles from \"./Login.module.css\";\nimport ErrorModal from '../UI/ErrorModal';\nimport AuthContext from '../../store/auth-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const [error, setError] = useState();\n  const authCtx = useContext(AuthContext);\n\n  const loginHandler = event => {\n    event.preventDefault();\n    console.log(\" ovo je ref \" + emailRef.current.value);\n    console.log(\" ovo je ref \" + passwordRef.current.value);\n\n    if (emailRef.current.value.trim().length === 0 || passwordRef.current.value.trim().length === 0) {\n      setError({\n        title: \"Invalid email or password\",\n        message: \"Try again - non empty\"\n      });\n      console.log(\"Error non empty!\");\n      return;\n    }\n\n    if (!emailRef.current.value.trim().includes('@')) {\n      setError({\n        title: \"Invalid email\",\n        message: \"Try again - email must contain @\"\n      });\n      console.log(\"Error - email must contain @\");\n      return;\n    } //mozes kasnije sve if za password staviti skupa kao jednu provjeru.\n\n\n    if (passwordRef.current.value.trim().length < 8) {\n      setError({\n        title: \"Invalid password\",\n        message: \"Try again - password must contain at least 8 characters\"\n      });\n      console.log(\"Error 3 - must contain at least 8 chars\");\n      return;\n    }\n\n    if (passwordRef.current.value.search(/[A-Z]/) === -1) {\n      setError({\n        title: \"Invalid password\",\n        message: \"Try again - password must contain at least one uppercase letter\"\n      });\n      console.log(\"Error4 missing upper case letter\");\n      return;\n    }\n\n    if (passwordRef.current.value.search(/[0-9]/) === -1) {\n      setError({\n        title: \"Invalid password\",\n        message: \"Try again - password must contain at least one number\"\n      });\n      console.log(\"Error5 missing number\");\n      return;\n    }\n\n    if (passwordRef.current.value.search(/[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/) === -1) {\n      setError({\n        title: \"Invalid password\",\n        message: \"Try again - password must contain one special character\"\n      });\n      console.log(\"Error6 missing special character\");\n      return;\n    }\n\n    const enteredUser = {\n      email: emailRef.current.value,\n      password: passwordRef.current.value\n    }; //SADA BI TREBALA PROVJERITI POSTOJI LI U BAZI PODATAKA OVAKAV USER +AUTENTIFIKACIJA\n    //BACKEND BI MI ONDA VRATIO TOKEN KOJI FRONT SPREMA U LOCAL STORAGE\n\n    var today = new Date();\n    const date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n    const token = enteredUser.email + date;\n    console.log(\"Token = \" + token);\n    console.log(\"ispravni su svi podaci!\");\n    authCtx.login(token);\n    props.onLogin(token);\n    emailRef.current.value = '';\n    passwordRef.current.value = '';\n  };\n\n  const confirmHandler = () => {\n    setError(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [error && /*#__PURE__*/_jsxDEV(ErrorModal, {\n      title: error.title,\n      message: error.message,\n      onConfirm: confirmHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: styles.input,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: loginHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"email\",\n          type: \"text\",\n          ref: emailRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"password\",\n          type: \"text\",\n          ref: passwordRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: styles.button,\n          children: \"Add User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"cloehhEOPpzeWmJ2+7s2860iGJc=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/tihana/Documents/ag04/weather-app/weather-app/src/components/Login/Login.js"],"names":["React","useState","useRef","useContext","Card","styles","ErrorModal","AuthContext","Login","props","emailRef","passwordRef","error","setError","authCtx","loginHandler","event","preventDefault","console","log","current","value","trim","length","title","message","includes","search","enteredUser","email","password","today","Date","date","getFullYear","getMonth","getDate","token","login","onLogin","confirmHandler","input","button"],"mappings":"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","sourcesContent":["import React , {useState , useRef, useContext} from 'react';\nimport Card from '../UI/Card';\nimport styles from \"./Login.module.css\";\nimport ErrorModal from '../UI/ErrorModal';\nimport AuthContext from '../../store/auth-context';\n\nconst Login = (props) => {\n\n    const emailRef = useRef();\n    const passwordRef = useRef();\n\n    const [error, setError] = useState();\n\n    const authCtx = useContext(AuthContext);\n\n    const loginHandler = (event) => {\n        event.preventDefault();\n        console.log(\" ovo je ref \"+emailRef.current.value);\n        console.log(\" ovo je ref \"+passwordRef.current.value);\n\n        if(emailRef.current.value.trim().length === 0|| passwordRef.current.value.trim().length === 0){\n            setError({\n                title : \"Invalid email or password\",\n                message : \"Try again - non empty\"\n            })\n            console.log(\"Error non empty!\");\n            return;\n        }\n\n        if(!emailRef.current.value.trim().includes('@')){\n            setError({\n                title : \"Invalid email\",\n                message : \"Try again - email must contain @\"\n            })\n            console.log(\"Error - email must contain @\");\n            return;\n        }\n        //mozes kasnije sve if za password staviti skupa kao jednu provjeru.\n        if(passwordRef.current.value.trim().length < 8){\n            setError({\n                title : \"Invalid password\",\n                message : \"Try again - password must contain at least 8 characters\"\n            })\n            console.log(\"Error 3 - must contain at least 8 chars\");\n            return;\n        }\n\n        if (passwordRef.current.value.search(/[A-Z]/) === -1){\n            setError({\n                title : \"Invalid password\",\n                message : \"Try again - password must contain at least one uppercase letter\"\n            })\n            console.log(\"Error4 missing upper case letter\");\n            return;\n        }\n        if (passwordRef.current.value.search(/[0-9]/) === -1){\n            setError({\n                title : \"Invalid password\",\n                message : \"Try again - password must contain at least one number\"\n            })\n            console.log(\"Error5 missing number\");\n            return;\n        }\n        if (passwordRef.current.value.search(/[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/) === -1){\n            setError({\n                title : \"Invalid password\",\n                message : \"Try again - password must contain one special character\"\n            })\n            console.log(\"Error6 missing special character\");\n            return;\n        }\n\n        const enteredUser = {\n            email : emailRef.current.value,\n            password : passwordRef.current.value\n        };\n\n        //SADA BI TREBALA PROVJERITI POSTOJI LI U BAZI PODATAKA OVAKAV USER +AUTENTIFIKACIJA\n        //BACKEND BI MI ONDA VRATIO TOKEN KOJI FRONT SPREMA U LOCAL STORAGE\n\n        var today = new Date();\n        const date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n\n        const token = enteredUser.email + date;\n        console.log(\"Token = \"+token);\n        console.log(\"ispravni su svi podaci!\");\n\n        authCtx.login(token);\n\n        props.onLogin(token);\n        emailRef.current.value = '';\n        passwordRef.current.value = '';\n\n    }\n\n    const confirmHandler = () =>{\n        setError(null)\n    }\n\n    return (\n        <div>\n            {error && <ErrorModal title={error.title} message={error.message} onConfirm={confirmHandler}/>}\n            <Card className={styles.input}>\n                <form onSubmit={loginHandler}>\n                    <label htmlFor=\"email\">Email</label>\n                    <input id=\"email\" type=\"text\" ref={emailRef} ></input>\n                    <label htmlFor=\"password\" >Password</label>\n                    <input id=\"password\" type=\"text\" ref={passwordRef}></input>\n                    <button type=\"submit\" className={styles.button}>Add User</button>\n                </form>\n            </Card>\n        </div>\n    );\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}