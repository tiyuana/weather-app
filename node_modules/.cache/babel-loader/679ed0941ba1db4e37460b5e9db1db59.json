{"ast":null,"code":"var _jsxFileName = \"/Users/tihana/Documents/ag04/weather-app/weather-app/src/components/pages/DailyWeather/DailyWeather.js\",\n    _s = $RefreshSig$();\n\nimport react, { useEffect } from \"react\";\nimport { useParams } from \"react-router\"; //ovdje ne mogu koristiti hourly forecast 4 days jer imam samo free acc openweather-a\n//one call api ima hourly samo za 2 dana\n//jedino mogu 3hour 5 day pa prikazivati svaka 3 h\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DailyWeather = props => {\n  _s();\n\n  const params = useParams();\n\n  const getDayName = dt => {\n    var days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n    var dayNum = new Date(dt * 1000).getDay();\n    var dayName = days[dayNum];\n    return dayName;\n  };\n\n  const fetchData = async () => {\n    console.log(\"DOHVATI DETALJNU DNEVNU PROGNOZU!!!\");\n    const response = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${params.cityId}&units=metric&appid=5a4e05662564bdefbc9d1b3d65c255f0`);\n    const data = await response.json();\n    console.log(data);\n\n    for (let i = 0; i < 40; i++) {\n      //console.log(data.list[i].dt);\n      const dayName = getDayName(data.list[i].dt); //console.log(dayName);\n\n      if (params.dayId === dayName) {\n        console.log(dayName);\n        let data_time = data.list[i].dt_txt.split(\" \")[1];\n        console.log(data_time);\n        let expected_temp = data.list[i].main.temp;\n        console.log(expected_temp);\n        /*const hourlyWeather = {\n            hours : data_time,\n            icon : <img src={`http://openweathermap.org/img/w/${data.daily[i].weather[0].icon}.png`}/>,\n            minTemp : data.daily[i].temp.min,\n            maxTemp : data.daily[i].temp.max\n             }*/\n      }\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: params.dayId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: params.cityId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DailyWeather, \"oVl/CosACDqoQXSsHMBk26cu/Mw=\", false, function () {\n  return [useParams];\n});\n\n_c = DailyWeather;\nexport default DailyWeather;\n\nvar _c;\n\n$RefreshReg$(_c, \"DailyWeather\");","map":{"version":3,"sources":["/Users/tihana/Documents/ag04/weather-app/weather-app/src/components/pages/DailyWeather/DailyWeather.js"],"names":["react","useEffect","useParams","DailyWeather","props","params","getDayName","dt","days","dayNum","Date","getDay","dayName","fetchData","console","log","response","fetch","cityId","data","json","i","list","dayId","data_time","dt_txt","split","expected_temp","main","temp"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,cAA1B,C,CAGA;AACA;AACA;;;;AACA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAE5B,QAAMC,MAAM,GAAGH,SAAS,EAAxB;;AAEA,QAAMI,UAAU,GAAIC,EAAD,IAAQ;AACvB,QAAIC,IAAI,GAAG,CAAC,KAAD,EAAO,KAAP,EAAa,KAAb,EAAmB,KAAnB,EAAyB,KAAzB,EAA+B,KAA/B,EAAqC,KAArC,CAAX;AACA,QAAIC,MAAM,GAAG,IAAIC,IAAJ,CAASH,EAAE,GAAG,IAAd,EAAoBI,MAApB,EAAb;AACA,QAAIC,OAAO,GAAGJ,IAAI,CAACC,MAAD,CAAlB;AACA,WAAOG,OAAP;AACH,GALD;;AAOA,QAAMC,SAAS,GAAK,YAAY;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ;AAEA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,sDAAqDZ,MAAM,CAACa,MAAO,sDAArE,CAA5B;AACA,UAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAnB;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;;AAEA,SAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAC,EAAjB,EAAsBA,CAAC,EAAvB,EAA0B;AACtB;AACA,YAAMT,OAAO,GAAGN,UAAU,CAACa,IAAI,CAACG,IAAL,CAAUD,CAAV,EAAad,EAAd,CAA1B,CAFsB,CAGtB;;AAEA,UAAGF,MAAM,CAACkB,KAAP,KAAiBX,OAApB,EAA4B;AACxBE,QAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACA,YAAIY,SAAS,GAAGL,IAAI,CAACG,IAAL,CAAUD,CAAV,EAAaI,MAAb,CAAoBC,KAApB,CAA0B,GAA1B,EAA+B,CAA/B,CAAhB;AACAZ,QAAAA,OAAO,CAACC,GAAR,CAAYS,SAAZ;AACA,YAAIG,aAAa,GAAGR,IAAI,CAACG,IAAL,CAAUD,CAAV,EAAaO,IAAb,CAAkBC,IAAtC;AACAf,QAAAA,OAAO,CAACC,GAAR,CAAYY,aAAZ;AAGA;AAChB;AACA;AACA;AACA;AACA;AAEa;AACJ;AACJ,GA7BD;;AAgCA1B,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,SAAS;AACZ,GAFQ,EAEN,EAFM,CAAT;AAKA,sBACI;AAAA,4BACI;AAAA,gBAAMR,MAAM,CAACkB;AAAb;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAAMlB,MAAM,CAACa;AAAb;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAxDD;;GAAMf,Y;UAEaD,S;;;KAFbC,Y;AA0DN,eAAeA,YAAf","sourcesContent":["import react , {useEffect} from \"react\";\nimport { useParams } from \"react-router\";\n\n\n//ovdje ne mogu koristiti hourly forecast 4 days jer imam samo free acc openweather-a\n//one call api ima hourly samo za 2 dana\n//jedino mogu 3hour 5 day pa prikazivati svaka 3 h\nconst DailyWeather = (props) => {\n\n    const params = useParams();\n\n    const getDayName = (dt) => {\n        var days = ['Sun','Mon','Tue','Wed','Thu','Fri','Sat'];\n        var dayNum = new Date(dt * 1000).getDay();\n        var dayName = days[dayNum];\n        return dayName\n    }\n\n    const fetchData = ( async () => {\n        console.log(\"DOHVATI DETALJNU DNEVNU PROGNOZU!!!\")\n        \n        const response = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${params.cityId}&units=metric&appid=5a4e05662564bdefbc9d1b3d65c255f0`);\n        const data = await response.json();\n        console.log(data);\n\n        for(let i = 0; i<40 ; i++){\n            //console.log(data.list[i].dt);\n            const dayName = getDayName(data.list[i].dt);\n            //console.log(dayName);\n\n            if(params.dayId === dayName){\n                console.log(dayName);\n                let data_time = data.list[i].dt_txt.split(\" \")[1];\n                console.log(data_time);\n                let expected_temp = data.list[i].main.temp;\n                console.log(expected_temp);\n\n\n                /*const hourlyWeather = {\n                    hours : data_time,\n                    icon : <img src={`http://openweathermap.org/img/w/${data.daily[i].weather[0].icon}.png`}/>,\n                    minTemp : data.daily[i].temp.min,\n                    maxTemp : data.daily[i].temp.max\n    \n                }*/\n            }\n        }\n    });\n\n\n    useEffect(() => {\n        fetchData();\n    }, []);  \n\n\n    return(\n        <div>\n            <div>{params.dayId}</div>\n            <div>{params.cityId}</div>\n        </div>\n    );\n\n\n}\n\nexport default DailyWeather;"]},"metadata":{},"sourceType":"module"}