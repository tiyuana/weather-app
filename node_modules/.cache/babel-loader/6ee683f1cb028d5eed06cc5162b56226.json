{"ast":null,"code":"var _jsxFileName = \"/Users/tihana/Documents/ag04/weather-app/weather-app/src/components/Forecast/Forecast.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Conditions from '../Conditions/Conditions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Forecast = () => {\n  _s();\n\n  const [unit, setUnit] = useState();\n  const [enteredCity, setEnteredCity] = useState(\"Beograd\");\n  let [responseObj, setResponseObj] = useState({}); //nacin1\n\n  /*const getForecast =  async () => {\n      try{\n          const res = await axios.get(\n              \"https://api.openweathermap.org/data/2.5/weather?q=Zagreb&appid=5a4e05662564bdefbc9d1b3d65c255f0\"\n          )\n          console.log(res.data);\n       } catch(err){\n          console.error(err);\n      }\n  };*/\n  //nacin2\n\n  /*const getForecast = async () => {\n      console.log(\"halo\");\n      const res = await axios.get(\n          \"https://api.openweathermap.org/data/2.5/weather?q=Zagreb&appid=5a4e05662564bdefbc9d1b3d65c255f0\"\n      )\n      console.log(res.data.main.temp);\n      console.log(res.data.main.temp_max);\n      console.log(res.data.main.temp_min);\n  }*/\n  //nacin3\n\n  const getForecast = () => {\n    if (enteredCity.trim().length === 0) {\n      console.log(\"ERROR MODAL ILI SAMO ZACRVENI\");\n    }\n\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${enteredCity}&appid=5a4e05662564bdefbc9d1b3d65c255f0`).then(response => response.json()).then(response => {\n      setResponseObj(response);\n    });\n  };\n\n  const enteredCityHandler = event => {\n    console.log(\"ovo je input: \" + event.target.value);\n    setEnteredCity(encodeURIComponent(event.target.value));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Find Current Weather Conditions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: enteredCityHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: getForecast,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter City\",\n        maxLength: \"50\",\n        value: city,\n        onChange: e => setEnteredCity(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"units\",\n          checked: unit === \"imperial\",\n          value: \"imperial\",\n          onChange: e => setUnit(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), \"Fahrenheit\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"units\",\n          checked: unit === \"metric\",\n          value: \"metric\",\n          onChange: e => setUnit(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), \"Celcius\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Get Forecast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(Conditions, {\n      responseObj: responseObj\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Forecast, \"t0KopUv/KEuQuQ4k12Rnwv6XxrQ=\");\n\n_c = Forecast;\nexport default Forecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"Forecast\");","map":{"version":3,"sources":["/Users/tihana/Documents/ag04/weather-app/weather-app/src/components/Forecast/Forecast.js"],"names":["React","useState","Conditions","Forecast","unit","setUnit","enteredCity","setEnteredCity","responseObj","setResponseObj","getForecast","trim","length","console","log","fetch","then","response","json","enteredCityHandler","event","target","value","encodeURIComponent","city","e"],"mappings":"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","sourcesContent":["import React , {useState} from 'react';\nimport Conditions from '../Conditions/Conditions';\n\n\nconst Forecast = () => {\n\n    const [unit,setUnit] = useState();\n    const [enteredCity, setEnteredCity] = useState(\"Beograd\");\n    let [responseObj, setResponseObj] = useState({});\n    //nacin1\n    /*const getForecast =  async () => {\n        try{\n            const res = await axios.get(\n                \"https://api.openweathermap.org/data/2.5/weather?q=Zagreb&appid=5a4e05662564bdefbc9d1b3d65c255f0\"\n            )\n            console.log(res.data);\n\n        } catch(err){\n            console.error(err);\n        }\n    };*/\n\n    //nacin2\n    /*const getForecast = async () => {\n        console.log(\"halo\");\n        const res = await axios.get(\n            \"https://api.openweathermap.org/data/2.5/weather?q=Zagreb&appid=5a4e05662564bdefbc9d1b3d65c255f0\"\n        )\n        console.log(res.data.main.temp);\n        console.log(res.data.main.temp_max);\n        console.log(res.data.main.temp_min);\n    }*/\n\n    //nacin3\n    const getForecast = () => {\n        if(enteredCity.trim().length === 0){\n            console.log(\"ERROR MODAL ILI SAMO ZACRVENI\");\n        }\n        fetch(`https://api.openweathermap.org/data/2.5/weather?q=${enteredCity}&appid=5a4e05662564bdefbc9d1b3d65c255f0`\n        ).then(response => response.json()).then(response => {\n           setResponseObj(response)\n       })\n    }\n\n    const enteredCityHandler = (event) => {\n        console.log(\"ovo je input: \"+event.target.value);\n        setEnteredCity(encodeURIComponent(event.target.value));\n    };\n    \n    return(\n        <div>\n           <h2>Find Current Weather Conditions</h2>\n           <input type=\"text\" onChange={enteredCityHandler}></input>\n           <form onSubmit={getForecast}>\n                <input\n                    type=\"text\"\n                    placeholder=\"Enter City\"\n                    maxLength=\"50\"\n                    value={city}\n                    onChange={(e) => setEnteredCity(e.target.value)}\n                    />\n                <label>\n                    <input\n                        type=\"radio\"\n                        name=\"units\"\n                        checked={unit === \"imperial\"}\n                        value=\"imperial\"\n                        onChange={(e) => setUnit(e.target.value)}\n                        />\n                    Fahrenheit\n                </label>\n                <label>\n                    <input\n                        type=\"radio\"\n                        name=\"units\"\n                        checked={unit === \"metric\"}\n                        value=\"metric\"\n                        onChange={(e) => setUnit(e.target.value)}\n                        />\n                    Celcius\n                </label>\n                <button type=\"submit\">Get Forecast</button>\n            </form>\n           <Conditions responseObj={responseObj}/>\n       </div>\n    );\n\n}\n\nexport default Forecast;"]},"metadata":{},"sourceType":"module"}