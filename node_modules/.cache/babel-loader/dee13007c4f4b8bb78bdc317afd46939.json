{"ast":null,"code":"var _jsxFileName = \"/Users/tihana/Documents/ag04/weather-app/weather-app/src/components/pages/Forecast/ForecastList.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Card from \"../../UI/Card\";\nimport Conditions from \"../Conditions/Conditions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ForecastList = props => {\n  _s();\n\n  const [cities, setCities] = useState([]);\n  useEffect(() => {\n    setCities(props.cities);\n  }, [props.cities]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"duljina liste je \", props.cities.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: props.cities.map(city => /*#__PURE__*/_jsxDEV(Conditions, {\n        responseObj: city.responseObj,\n        error: city.error //new\n        ,\n        loading: city.loading //new\n\n      }, city.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ForecastList, \"DiWQVw0ar2n3PLd56i1Tx+k2gPg=\");\n\n_c = ForecastList;\nexport default ForecastList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForecastList\");","map":{"version":3,"sources":["/Users/tihana/Documents/ag04/weather-app/weather-app/src/components/pages/Forecast/ForecastList.js"],"names":["React","Card","Conditions","ForecastList","props","cities","setCities","useState","useEffect","length","map","city","responseObj","error","loading","key"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAE5B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBC,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZF,IAAAA,SAAS,CAACF,KAAK,CAACC,MAAP,CAAT;AACH,GAFQ,EAEN,CAACD,KAAK,CAACC,MAAP,CAFM,CAAT;AAIA,sBACI,QAAC,IAAD;AAAA,4BACK;AAAA,sCAAqBD,KAAK,CAACC,MAAN,CAAaI,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,YADL,eAEI;AAAA,gBACKL,KAAK,CAACC,MAAN,CAAaK,GAAb,CAAkBC,IAAD,iBACd,QAAC,UAAD;AAEI,QAAA,WAAW,EAAEA,IAAI,CAACC,WAFtB;AAGI,QAAA,KAAK,EAAED,IAAI,CAACE,KAHhB,CAGuB;AAHvB;AAII,QAAA,OAAO,EAAEF,IAAI,CAACG,OAJlB,CAI2B;;AAJ3B,SACSH,IAAI,CAACI,GADd;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CAxBD;;GAAMZ,Y;;KAAAA,Y;AA0BN,eAAeA,YAAf","sourcesContent":["import React from \"react\";\nimport Card from \"../../UI/Card\";\nimport Conditions from \"../Conditions/Conditions\";\n\nconst ForecastList = (props) => {\n\n    const [cities, setCities] = useState([]);\n\n    useEffect(() => {\n        setCities(props.cities);\n    }, [props.cities]);\n\n    return(\n        <Card>\n            {<p>duljina liste je {props.cities.length}</p>}\n            <ul>\n                {props.cities.map((city) => (\n                    <Conditions\n                        key={city.key}\n                        responseObj={city.responseObj}\n                        error={city.error} //new\n                        loading={city.loading} //new\n                    /> \n                ))}\n            </ul>\n        </Card>\n    );\n\n};\n\nexport default ForecastList;"]},"metadata":{},"sourceType":"module"}