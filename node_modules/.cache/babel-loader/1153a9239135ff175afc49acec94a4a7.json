{"ast":null,"code":"var _jsxFileName = \"/Users/tihana/Documents/ag04/weather-app/weather-app/src/components/pages/Forecast/FiveDayForecast.js\",\n    _s = $RefreshSig$();\n\nimport react, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport WeekContainer from \"../WeeklyForecast/WeekContainer\";\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FiveDayForecast = () => {\n  _s();\n\n  const [dailyWeatherList, setDailyWeatherList] = useState([]);\n  const params = useParams();\n  const location = useLocation(); //mogla sam ovdje koristiti one call api jer ima daily za 7 dana-PROMIJENI KASNIJE!!\n  //1nacin u kojem sam koristila 5 day forecast API\n\n  /*  const fetchData = ( async () => {\n          const response = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${params.cityId}&units=metric&appid=5a4e05662564bdefbc9d1b3d65c255f0`);\n          const data = await response.json();\n          console.log(data);\n  */\n\n  /*const dailyData = data.list.filter(reading => {   \n      return reading.dt_txt.includes(\"18:00:00\")\n      }\n    )\n  console.log(\"ovo je filtrirano\");\n  console.log(dailyData);*/\n\n  /*       for (let i = 0; i <40; i=i+8) {\n              let data_time = data.list[i].dt_txt.split(\" \")[0].split(\"-\");\n              let month = getMonth(data_time[1]);\n             var date = new Date(data_time[2]+month+data_time[0]);\n             var day = date.getDay();\n             var daysName = ['Sun','Mon','Tue','Wed','Thu','Fri','Sat'];\n             \n           \n             const dailyWeather = {\n                 dayName : daysName[day],\n                 //icon : \"data.list[i].weather[0].id\",\n                 icon : <img src={`http://openweathermap.org/img/w/${data.list[i].weather[0].icon}.png`}/>,\n                 minTemp : data.list[i].main.temp_min,\n                 maxTemp : data.list[i].main.temp_max,\n              }\n              setDailyWeatherList((prevDailyWeathers) => {\n                 const updated = [...prevDailyWeathers,dailyWeather];\n                 return updated;\n             });\n         }\n      });*/\n\n  const FetchData = async () => {\n    let latitude;\n    let longitude;\n\n    if (!location.state) {\n      console.log(\"moras dohvatiti drugu lokacije!!!\");\n      const response1 = await fetch(`http://api.openweathermap.org/geo/1.0/direct?q=${params.cityId}&limit=1&appid=5a4e05662564bdefbc9d1b3d65c255f0`);\n      const data1 = await response1.json();\n      latitude = data1[0].lat;\n      longitude = data1[0].lon;\n    } else {\n      latitude = location.state.lat;\n      longitude = location.state.lon;\n    }\n\n    const response = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&exclude=current,minutely,hourly,alerts&units=metric&appid=5a4e05662564bdefbc9d1b3d65c255f0`);\n    const data = await response.json();\n    console.log(data);\n\n    for (let i = 0; i < 5; i = i + 1) {\n      console.log(\"dan \" + i);\n      console.log(data.daily[i]);\n      var days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n      var dayNum = new Date(data.daily[i].dt * 1000).getDay();\n      var dayName = days[dayNum];\n      console.log(dayName);\n      const dailyWeather = {\n        dayName: dayName,\n        icon: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `http://openweathermap.org/img/w/${data.daily[i].weather[0].icon}.png`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 24\n        }, this),\n        minTemp: data.daily[i].temp.min,\n        maxTemp: data.daily[i].temp.max\n      };\n      setDailyWeatherList(prevDailyWeathers => {\n        const updated = [...prevDailyWeathers, dailyWeather];\n        return updated;\n      });\n    }\n  };\n\n  useEffect(() => {\n    FetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(WeekContainer, {\n      fiveDays: dailyWeatherList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FiveDayForecast, \"7ZWsWlyABx7DmPgCwa2C+iEcXV4=\", false, function () {\n  return [useParams, useLocation];\n});\n\n_c = FiveDayForecast;\nexport default FiveDayForecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"FiveDayForecast\");","map":{"version":3,"sources":["/Users/tihana/Documents/ag04/weather-app/weather-app/src/components/pages/Forecast/FiveDayForecast.js"],"names":["react","useEffect","useState","useParams","WeekContainer","useLocation","FiveDayForecast","dailyWeatherList","setDailyWeatherList","params","location","FetchData","latitude","longitude","state","console","log","response1","fetch","cityId","data1","json","lat","lon","response","data","i","daily","days","dayNum","Date","dt","getDay","dayName","dailyWeather","icon","weather","minTemp","temp","min","maxTemp","max","prevDailyWeathers","updated"],"mappings":"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","sourcesContent":["import react , {useEffect , useState} from \"react\";\nimport { useParams } from \"react-router\";\nimport WeekContainer from \"../WeeklyForecast/WeekContainer\";\nimport { useLocation } from 'react-router-dom'\n\n\nconst FiveDayForecast = () => {\n\n    const [dailyWeatherList, setDailyWeatherList] = useState([]);\n    const params = useParams();\n\n    const location = useLocation();\n\n\n    //mogla sam ovdje koristiti one call api jer ima daily za 7 dana-PROMIJENI KASNIJE!!\n    //1nacin u kojem sam koristila 5 day forecast API\n/*  const fetchData = ( async () => {\n        const response = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${params.cityId}&units=metric&appid=5a4e05662564bdefbc9d1b3d65c255f0`);\n        const data = await response.json();\n        console.log(data);\n*/\n\n        /*const dailyData = data.list.filter(reading => {   \n            return reading.dt_txt.includes(\"18:00:00\")\n            }\n          )\n        console.log(\"ovo je filtrirano\");\n        console.log(dailyData);*/\n\n\n /*       for (let i = 0; i <40; i=i+8) {\n\n            let data_time = data.list[i].dt_txt.split(\" \")[0].split(\"-\");\n\n            let month = getMonth(data_time[1]);\n            var date = new Date(data_time[2]+month+data_time[0]);\n            var day = date.getDay();\n            var daysName = ['Sun','Mon','Tue','Wed','Thu','Fri','Sat'];\n            \n          \n            const dailyWeather = {\n                dayName : daysName[day],\n                //icon : \"data.list[i].weather[0].id\",\n                icon : <img src={`http://openweathermap.org/img/w/${data.list[i].weather[0].icon}.png`}/>,\n                minTemp : data.list[i].main.temp_min,\n                maxTemp : data.list[i].main.temp_max,\n\n            }\n\n            setDailyWeatherList((prevDailyWeathers) => {\n                const updated = [...prevDailyWeathers,dailyWeather];\n                return updated;\n            });\n        }\n\n    });*/\n\n    const FetchData = ( async () => {\n        \n        let latitude;\n        let longitude;\n\n        if (!location.state){\n            console.log(\"moras dohvatiti drugu lokacije!!!\")\n            const response1 = await fetch(`http://api.openweathermap.org/geo/1.0/direct?q=${params.cityId}&limit=1&appid=5a4e05662564bdefbc9d1b3d65c255f0`);\n            const data1 = await response1.json();\n            latitude = data1[0].lat;\n            longitude = data1[0].lon;\n\n        }   else {\n            \n            latitude = location.state.lat;\n            longitude = location.state.lon;\n        }\n\n\n        const response = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&exclude=current,minutely,hourly,alerts&units=metric&appid=5a4e05662564bdefbc9d1b3d65c255f0`);\n        const data = await response.json();\n        console.log(data);\n\n        for (let i = 0; i <5; i=i+1) {\n            console.log(\"dan \"+i);\n            console.log(data.daily[i]);\n\n            var days = ['Sun','Mon','Tue','Wed','Thu','Fri','Sat'];\n            var dayNum = new Date(data.daily[i].dt * 1000).getDay();\n            var dayName = days[dayNum];\n            console.log(dayName);\n            \n\n            const dailyWeather = {\n                dayName : dayName,\n                icon : <img src={`http://openweathermap.org/img/w/${data.daily[i].weather[0].icon}.png`}/>,\n                minTemp : data.daily[i].temp.min,\n                maxTemp : data.daily[i].temp.max\n\n            }\n\n            setDailyWeatherList((prevDailyWeathers) => {\n                const updated = [...prevDailyWeathers,dailyWeather];\n                return updated;\n            });\n        }\n    });\n\n\n    useEffect(() => {\n        FetchData();\n    }, []);    \n\n\n    return(\n        <div>\n            <WeekContainer fiveDays={dailyWeatherList} />\n        </div>\n    );\n}\n\nexport default FiveDayForecast;"]},"metadata":{},"sourceType":"module"}